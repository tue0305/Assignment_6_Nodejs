version: '3'

networks:
  kafka-net:
    driver: bridge

services:

  zookeeper-server:
    image: 'bitnami/zookeeper:latest'
    networks:
      - kafka-net
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka-server1:
    image: 'bitnami/kafka:latest'
    networks:
      - kafka-net
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-server
  
  nosql-db:
    image: mongo
    ports:
      - "27017:27017"
    container_name: nosql-db
    volumes:
      - ./db/:/data/db

  post-service:
    build:
      dockerfile: Dockerfile
      context: ./post-service
    container_name: post-service
    ports:
      - "8002:8002"
    restart: always
    depends_on:
      - "nosql-db"
    volumes:
      - .:/app
      - /app/post-service/node_modules

  # shopping:
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./shopping
  #   container_name: shopping
  #   ports:
  #     - "8003:8003"
  #   restart: always
  #   depends_on:
  #     - "nosql-db"
  #   volumes:
  #     - .:/app
  #     - /app/shopping/node_modules

  user-service:
    build:
      dockerfile: Dockerfile
      context: ./user-service
    container_name: user-service
    ports:
      - "8001:8001"
    restart: always
    depends_on:
      - "nosql-db"
    volumes:
      - .:/app
      - /app/user-service/node_modules

  nginx-proxy:
    build:
      dockerfile: Dockerfile
      context: ./proxy
    depends_on:
      - post-service
      - user-service
    ports:
      - "80:80"
 

 